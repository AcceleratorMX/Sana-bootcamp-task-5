@model TodoViewModel
@{
    ViewData["Title"] = "My TODO`s";
}

@await Html.PartialAsync("_CreateForm")

<ul class="list-group">
    @foreach (var job in Model.Jobs.OrderBy(j => j.IsDone))
    {
        <li class="list-group-item d-flex align-items-center @(job.IsDone ? "text-muted" : "")">
            <div class="name-cell @(job.IsDone ? "text-decoration-line-through" : "")">@job.Name</div>
            <div class="category-cell text-center mx-md-2">@job.Category.Name</div>
            <div class="buttons-cell d-flex justify-content-between align-items-center">
                @if (!job.IsDone)
                {
                    <form asp-controller="Todo" asp-action="ChangeProgress">
                        <label asp-for="@job.Id">Завершити</label>
                        <input asp-for="@job.Id" type="hidden" name="id"/>
                        <button type="submit" class="btn btn-outline-primary">Завершити</button>
                    </form>
                }
                else
                {
                    <button type="submit" class="btn btn-outline-dark" disabled>
                        <i>Завершeно</i>
                    </button>
                    <form asp-controller="Todo" asp-action="Delete" class="delete-button">
                        <label asp-for="@job.Id">Видалити</label>
                        <input asp-for="@job.Id" type="hidden" name="id"/>
                        <button type="submit">
                            <img src="~/images/icons/icons8-delete-trash-32.png" alt="delete" class="delete-icon"/>
                        </button>
                    </form>
                }
            </div>
        </li>
    }
</ul>